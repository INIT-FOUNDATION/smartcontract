---
import PageContent from "~/components/PageContent/PageContent.astro"
import LeftSidebar from "~/components/LeftSidebar/LeftSidebar.astro"
import RightSidebar from "~/components/RightSidebar/RightSidebar.astro"
import * as CONFIG from "~/config"
import { BaseFrontmatter } from "~/content/config"
import WhatsNext from "~/components/PageContent/WhatsNext.astro"
import { MarkdownHeading } from "astro"
import StickyHeader from "~/components/StickyHeader/StickyHeader"
import BaseLayout from "./BaseLayout.astro"

interface Props {
  frontmatter: BaseFrontmatter
  headings?: MarkdownHeading[]
}
const { frontmatter, headings } = Astro.props

const titleHeading: MarkdownHeading = {
  text: frontmatter.title,
  slug: "overview",
  depth: 1,
}

const filteredHeadings = headings?.filter((h) => h.depth < 5)
const initialHeadings = [titleHeading].concat(filteredHeadings ?? [])

const whatsNext = frontmatter.whatsnext

const currentPage = new URL(Astro.request.url).pathname

const currentFile = `src/content${currentPage.replace(/\/$/, "")}${frontmatter.isIndex ? "/index" : ""}.mdx`
const githubEditUrl = CONFIG.GITHUB_EDIT_URL + currentFile
const formattedContentTitle = `${frontmatter.title} | ${CONFIG.SITE.title}`

const includeLinkToWalletScript = !!Astro.props.frontmatter.metadata?.linkToWallet
---

<BaseLayout title={formattedContentTitle} metadata={frontmatter.metadata}>
  <StickyHeader client:media="(max-width: 50em)" {initialHeadings} />
  <main>
    <div id="left-bg"></div>
    <div class="layout">
      <aside id="grid-left" title="Site Navigation">
        <LeftSidebar currentPage={currentPage} section={frontmatter.section} />
      </aside>
      <div id="grid-main">
        <PageContent {titleHeading}>
          <slot />
        </PageContent>
        {whatsNext && <WhatsNext content={whatsNext} />}
      </div>
      <aside id="grid-right" title="Table of Contents">
        <RightSidebar {githubEditUrl} headings={initialHeadings} />
      </aside>
    </div>
  </main>

  <style>
    .layout {
      display: grid;
      grid-template-columns: auto;
      --gutter: var(--space-6x);
      --doc-padding: 2rem;
      margin-bottom: 0;
    }

    #grid-left,
    #grid-right {
      display: none;
    }

    #grid-main {
      padding: var(--doc-padding) var(--gutter);
      display: flex;
      flex-direction: column;
      margin-bottom: var(--space-10x);
      min-width: 0;
    }

    @media (min-width: 50em) {
      main {
        display: grid;
        grid-template-columns: auto fit-content(100%) auto;
        margin-bottom: 0 !important;
      }

      .layout {
        grid-template-columns: auto 2fr 1fr;
        gap: var(--gutter);
        max-width: var(--fullwidth-max-width);
        align-self: center;
      }

      #grid-left,
      #left-bg {
        background: #fafbfd;
      }

      #grid-left,
      #grid-right {
        display: flex;
      }

      #grid-main {
        padding: 0 0 var(--doc-padding) 0;
      }
    }

    @media (min-width: 72em) {
      .layout {
        gap: var(--doc-padding);
      }
    }
  </style>

  <script define:vars={{ includeLinkToWalletScript }}>
    window["includeLinkToWalletScript"] = includeLinkToWalletScript
  </script>

  <script>
    import "~/scripts"
    if (window["includeLinkToWalletScript"]) {
      import("~/scripts/link-to-wallet")
    }
  </script>
</BaseLayout>
