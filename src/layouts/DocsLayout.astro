---
import HeadCommon from "../components/HeadCommon.astro"
import HeadSEO from "../components/HeadSEO.astro"
import Header from "../components/Header/Header.astro"
import PageContent from "../components/PageContent/PageContent.astro"
import LeftSidebar from "../components/LeftSidebar/LeftSidebar.astro"
import RightSidebar from "../components/RightSidebar/RightSidebar.astro"
import * as CONFIG from "../config"
import { NewsletterCTA } from "../components/Footer/NewsletterCTA"
import Footer from "~/components/Footer/Footer.astro"
import { BaseFrontmatter } from "~/content/config"
import WhatsNext from "~/components/PageContent/WhatsNext.astro"
interface Props {
  frontmatter: BaseFrontmatter
}
const { frontmatter } = Astro.props

const whatsNext = frontmatter.whatsnext

const currentPage = new URL(Astro.request.url).pathname

const currentFile = `src/content${currentPage.replace(/\/$/, "")}${frontmatter?.isIndex ? "/index" : ""}.mdx`
const githubEditUrl = CONFIG.GITHUB_EDIT_URL + currentFile
const formattedContentTitle = frontmatter.title
  ? `${frontmatter.title} | ${CONFIG.SITE.title}`
  : `${CONFIG.PAGE.titleFallback} | ${CONFIG.SITE.title}`

const canonicalURLStr = new URL(Astro.url.pathname, Astro.site).href.replace(/\/+$/, "")
const canonicalURL = new URL(canonicalURLStr)

const includeLinkToWalletScript = !!Astro.props?.frontmatter?.metadata?.linkToWallet
---

<html dir="ltr" lang="en-us" class="initial">
  <head>
    <HeadCommon />
    <HeadSEO metadata={frontmatter.metadata} {canonicalURL} />
    <title>{formattedContentTitle}</title>
    <style>
      html {
        scroll-behavior: smooth;
      }

      .layout {
        display: grid;
        grid-template-columns: auto;
        --gutter: var(--space-6x);
        --doc-padding: 2rem;
        margin-bottom: 0;
      }

      #grid-left,
      #grid-right {
        display: none;
      }

      #grid-left {
        background-color: var(--theme-bg);
      }

      #grid-main {
        padding: var(--doc-padding) var(--gutter);
        display: flex;
        flex-direction: column;
        margin-bottom: var(--space-10x);
        min-width: 0;
      }

      @media (min-width: 50em) {
        .layout {
          grid-template-columns: 1fr auto;
          gap: 1em;
        }

        #grid-left {
          display: flex;
          background: #fafbfd;
          justify-content: flex-end;
        }
      }

      @media (min-width: 72em) {
        .layout {
          grid-template-columns: 1fr 2fr 1fr;
        }

        #grid-main {
          padding-top: 0;
        }

        #grid-right {
          display: flex;
        }
      }
    </style>
    <style is:global>
      @media (max-width: 50em) {
        .mobile-sidebar-toggle {
          overflow: hidden;
        }

        .mobile-sidebar-toggle #grid-left {
          display: initial;
          position: fixed;
          width: 100vw;
          height: calc(100vh - var(--theme-navbar-height));
          overflow: auto;
          top: var(--theme-navbar-height);
          z-index: 5;
        }

        .mobile-sidebar-toggle #grid-left * {
          position: initial;
          overflow: initial;
          max-height: initial;
        }
      }
    </style>
    <script>
      import "../scripts/index.ts"
    </script>
    <script define:vars={{ includeLinkToWalletScript }}>
      window.includeLinkToWalletScript = includeLinkToWalletScript
    </script>
    <script define:vars={{ frontmatter }}>
      const persistedArticle = {
        title: frontmatter.title,
        url: frontmatter.url,
      }

      const recentArticles = JSON.parse(localStorage.getItem("recentArticles") || "[]")

      if (!recentArticles.some((article) => article.url === persistedArticle.url)) {
        recentArticles.unshift(persistedArticle)
        localStorage.setItem("recentArticles", JSON.stringify(recentArticles.slice(0, 5)))
      }
    </script>
  </head>

  <body>
    <Header section={frontmatter.section} />
    <main class="layout">
      <aside id="grid-left" title="Site Navigation">
        <LeftSidebar currentPage={currentPage} section={frontmatter.section} />
      </aside>
      <div id="grid-main">
        <PageContent {frontmatter}>
          <slot />
        </PageContent>
        {whatsNext && <WhatsNext content={whatsNext} />}
      </div>
      <aside id="grid-right" title="Table of Contents">
        <RightSidebar {githubEditUrl} />
      </aside>
    </main>
    <NewsletterCTA client:visible />
    <Footer />

    <script>
      //@ts-expect-error
      if (window.includeLinkToWalletScript) {
        //@ts-expect-error astro handles the .ts extension
        import("../scripts/link-to-wallet.ts")
      }
    </script>
  </body>
</html>
