---
import { Sections } from "~/content/config"
import { SIDEBAR, MENU, SectionContent } from "../../config"
import { flattenChildren } from "../../scripts/flatten-children"
export type Props = {
  currentPage: string
  section?: Sections
}
const { currentPage, section } = Astro.props

// SIDEBAR is a flat array. Group it by sections to properly render.
const getSidebarSections = (section?: Sections) => {
  if (!section) {
    return []
  } else if (section === "global") {
    return Object.keys(SIDEBAR).flatMap((parentSection) => {
      return SIDEBAR[parentSection].map((entry: any) => ({ ...entry, parentSection }))
    })
  }
  return SIDEBAR[section] ?? []
}

const sidebarSections = getSidebarSections(section)

// Remove slashes and params
const removeSlashes = (url: string) => {
  let sanitizedUrl = url
  sanitizedUrl = sanitizedUrl.split("?parent")[0]
  if (sanitizedUrl.charAt(0) == "/") sanitizedUrl = sanitizedUrl.substr(1)
  if (sanitizedUrl.charAt(sanitizedUrl.length - 1) == "/")
    sanitizedUrl = sanitizedUrl.substr(0, sanitizedUrl.length - 1)
  return sanitizedUrl
}

const currentPageMatch = removeSlashes(currentPage.slice(1))
// TODO: Don't have the sidebar nav replace the header on mobile
---

<nav aria-labelledby="grid-left">
  <ul id="mobile-menu" class="nav-groups">
    <!-- TODO: Order this so title goes above ul -->
    <h2 class="nav-group-title">NAVIGATION</h2>
    {
      MENU.en.map((child) => (
        <li class="nav-link" style="margin: 0; padding-bottom: 0;">
          <a href={child.link}>{child.text}</a>
        </li>
      ))
    }
  </ul>
  <hr class="menu-separator" />
  {
    // TODO: This currently hides the sidebar on the main page(?)
    // that needs to change
    section !== "global" && (
      <ul class="nav-groups">
        {sidebarSections.map((s: { parentSection: Sections; contents: SectionContent[]; section: Sections }) => {
          return (
            <li class={s.parentSection ? `parent-${s.parentSection}` : ""}>
              <details
                open={
                  !!flattenChildren(s.contents).filter((object) => removeSlashes(object.url) == currentPageMatch).length
                }
              >
                <summary class="nav-group-title">{s.section}</summary>
                <ul>
                  {s.contents &&
                    s.contents.map((child) => (
                      <li class="nav-link">
                        <a
                          href={`${Astro.site?.pathname}${child.url}`}
                          aria-current={currentPageMatch === removeSlashes(child.url) ? "page" : "false"}
                        >
                          {child.title}
                        </a>
                      </li>
                    ))}
                </ul>
              </details>
            </li>
          )
        })}
      </ul>
    )
  }
</nav>

<style>
  .menu-separator {
    border-top: 1px solid var(--theme-divider);
  }

  nav {
    width: 100%;
  }

  .nav-groups {
    height: 100%;
    padding: 2rem 0;
    overflow-x: visible;
    overflow-y: auto;
    max-height: 100vh;
  }

  .nav-groups > li[aria-hidden="true"] {
    display: none;
  }

  .nav-groups > li + li {
    margin-top: 0.8rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem 1rem;
    font: inherit;
    color: inherit;
    text-decoration: none;
    display: block;
  }

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }

  .nav-link a[aria-current="page"] {
    color: var(--theme-text-accent);
    background-color: var(--theme-bg-accent);
    font-weight: 600;
  }

  :global(:root.theme-dark) .nav-link a[aria-current="page"] {
    color: hsla(var(--color-base-white), 100%, 1);
  }

  details summary {
    cursor: pointer;
    color: var(--blue-800);
  }

  details summary::after {
    content: "";
    display: inline-flex;
    width: 24px;
    height: 24px;
    background-image: url(https://smartcontract.imgix.net/icons/Caret.svg?auto=compress%2Cformat);
    background-repeat: no-repeat;
    float: right;
  }

  details[open] summary::after {
    transform: rotate(180deg);
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }

    #mobile-menu,
    .menu-separator {
      display: none;
      height: 0;
    }
  }
</style>

<script is:inline>
  // TODO: Commented out until I find out if it's actually used
  // window.addEventListener("DOMContentLoaded", (event) => {
  //     var target = document.querySelector('[aria-current="page"]')
  //     if (target && target.offsetTop > window.innerHeight - 100) {
  //       document.querySelector(".nav-groups").scrollTop = target.offsetTop
  //     }
  //   })
  window.addEventListener("DOMContentLoaded", () => {
    const parentSection = new URLSearchParams(window.location.search).get("parent")
    if (parentSection) {
      for (let elem of document.querySelectorAll(`.parent-${parentSection}`)) {
        elem.setAttribute("aria-hidden", "false")
      }
    }
  })
</script>
