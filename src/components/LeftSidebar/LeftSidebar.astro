---
import { Sections } from "~/content/config"
import { SIDEBAR, MENU, SectionContent } from "../../config"
import { flattenChildren } from "../../scripts/flatten-children"
export type Props = {
  currentPage: string
  section?: Sections
}
const { currentPage, section } = Astro.props

// SIDEBAR is a flat array. Group it by sections to properly render.
const getSidebarSections = (section?: Sections) => {
  if (!section) {
    return []
  } else if (section === "global") {
    return Object.keys(SIDEBAR).flatMap((parentSection) => {
      return SIDEBAR[parentSection].map((entry: any) => ({ ...entry, parentSection }))
    })
  }
  return SIDEBAR[section] ?? []
}

const sidebarSections = getSidebarSections(section)

// Remove slashes and params
const removeSlashes = (url: string) => {
  let sanitizedUrl = url
  sanitizedUrl = sanitizedUrl.split("?parent")[0]
  if (sanitizedUrl.charAt(0) == "/") sanitizedUrl = sanitizedUrl.substr(1)
  if (sanitizedUrl.charAt(sanitizedUrl.length - 1) == "/")
    sanitizedUrl = sanitizedUrl.substr(0, sanitizedUrl.length - 1)
  return sanitizedUrl
}

const currentPageMatch = removeSlashes(currentPage.slice(1))
// TODO: Don't have the sidebar nav replace the header on mobile
---

<nav aria-labelledby="grid-left">
  <ul id="mobile-menu" class="nav-groups">
    <!-- TODO: Order this so title goes above ul -->
    <h2 class="nav-group-title">NAVIGATION</h2>
    {
      MENU.en.map((child) => (
        <li style="padding: 0;">
          <a class="nav-link" href={child.link} style="font-size: 16px">
            {child.text}
          </a>
        </li>
      ))
    }
  </ul>
  <hr class="menu-separator" />
  <ul class="nav-groups">
    {
      sidebarSections.map((s: { parentSection: Sections; contents: SectionContent[]; section: Sections }) => (
        <li aria-hidden={section === "global"} class={s.parentSection ? `parent-${s.parentSection}` : ""}>
          <details
            open={
              !!flattenChildren(s.contents).filter((object) => removeSlashes(object.url) == currentPageMatch).length
            }
          >
            <summary class="nav-group-title">{s.section}</summary>
            <ul>
              {s.contents &&
                s.contents.map((child) => (
                  <>
                    <li>
                      <a
                        class="nav-link"
                        href={`${Astro.site?.pathname}${child.url}`}
                        aria-current={currentPageMatch === removeSlashes(child.url) ? "page" : "false"}
                      >
                        {child.title}
                      </a>
                    </li>
                    {child.children &&
                      child.children.map((childItem) => (
                        <li>
                          <a
                            class="nav-link nested"
                            href={`${Astro.site?.pathname}${childItem.url}`}
                            aria-current={`${currentPageMatch === removeSlashes(childItem.url) ? "page" : "false"}`}
                          >
                            {childItem.title}
                          </a>
                        </li>
                      ))}
                  </>
                ))}
            </ul>
          </details>
        </li>
      ))
    }
  </ul>
</nav>

<style>
  .menu-separator {
    border-top: 1px solid var(--theme-divider);
  }

  .nav-groups {
    margin: var(--doc-padding) 0;
    padding: 2rem;
    max-height: 100vh;
    top: 0;
    overflow-y: auto;
    position: sticky;
  }

  .nav-groups :is(ul, li) {
    list-style: none;
  }

  .nav-groups > li {
    padding-top: var(--space-4x);
  }

  .nav-groups > li[aria-hidden="true"] {
    display: none;
  }

  .nav-group-title {
    font-size: 16px;
    font-weight: 500;
    margin-bottom: var(--space-3x);
    color: var(--blue-800);
  }

  details summary {
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-2x);
  }

  details summary::after {
    content: "";
    width: var(--space-6x);
    height: var(--space-6x);
    background-image: url(https://smartcontract.imgix.net/icons/Caret.svg?auto=compress%2Cformat);
    background-repeat: no-repeat;
  }

  details[open] summary::after {
    transform: rotate(180deg);
  }

  .nav-link {
    display: block;
    line-height: 1.5;
    font-size: 14px;
    color: var(--gray-500, #858a95);
    padding: var(--space-2x) var(--space-6x) var(--space-2x) var(--space-4x);
    border-left: 2px solid var(--gray-200, #ecedef);
    transition-property: color, border-left-color;
    transition-duration: 100ms;
    transition-timing-function: ease-in;
  }

  .nav-link.active,
  .nav-link:hover,
  .nav-link:focus,
  .nav-link[aria-current="page"] {
    color: var(--blue-600, #375bd2);
    border-left-color: var(--blue-600, #375bd2);
  }

  .nav-link[aria-current="page"] {
    font-weight: 500;
  }

  :global(:root.theme-dark) .nav-link[aria-current="page"] {
    color: hsla(var(--color-base-white), 100%, 1);
  }

  .nav-link.nested {
    padding-left: var(--space-8x);
  }

  @media (min-width: 50em) {
    nav {
      width: 300px;
    }
    .nav-groups {
      padding: var(--space-8x);
    }

    #mobile-menu,
    .menu-separator {
      display: none;
      height: 0;
    }
  }
</style>

<script is:inline>
  window.addEventListener("DOMContentLoaded", () => {
    const parentSection = new URLSearchParams(window.location.search).get("parent") || "gettingStarted"
    if (parentSection) {
      for (let elem of document.querySelectorAll(`.parent-${parentSection}`)) {
        elem.setAttribute("aria-hidden", "false")
      }
    }
  })
</script>
