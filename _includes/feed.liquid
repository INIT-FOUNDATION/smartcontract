---
layout: ./nodes.liquid
section: ethereum
---

{{content}}

<h4>Best practices for ETF and Forex feeds</h4>
<ul>
<li>Off-chain equity and ETF assets are traded only during standard market hours from 9:30AM to 4:00PM EDT Monday through Friday. <strong>Do not</strong> use these feeds outside of those windows.</li>
<li>Assets on the Forex (Foreign Exchange) markets are traded only from 5PM EDT on Sunday through 4PM EDT on Friday. Additionally, some currencies might trade only during local banking hours. <strong>Do not</strong> use Forex feeds outside of market hours for the specific currency.</li>
</ul>

<div id="categories">
    <h4>Data feed categories</h4>
    <ul>
      <li>ðŸŸ¢ <a href="/docs/data-feeds/selecting-data-feeds/#ðŸŸ¢-verified-feeds"><strong>Verified Feeds</strong></a>: Feeds that follow a standardized data feeds workflow</li>
      <li>ðŸŸ¡ <a href="/docs/data-feeds/selecting-data-feeds/#ðŸŸ¡-monitored-feeds"><strong>Monitored Feeds</strong></a>: Feeds under review by the Chainlink Labs team to support the stability of the broader ecosystem</li>
      <li>ðŸ”µ <a href="/docs/data-feeds/selecting-data-feeds/#-custom-feeds"><strong>Custom Feeds</strong></a>: Feeds built to serve a specific use case and might not be suitable for general use</li>
      <li>âš« <a href="/docs/data-feeds/selecting-data-feeds/#-specialized-feeds"><strong>Specialized Feeds</strong></a>: Purpose-built feeds that might rely on contracts maintained by external entities and require in-depth understanding of composition methodology before use</li>
      <li>â­• <a href="/docs/data-feeds/deprecating-feeds/"><strong>Deprecating</strong></a>: These feeds are scheduled for deprecation. See the <a href="/docs/data-feeds/deprecating-feeds/">Deprecation</a> page to learn more.</li>
    </ul>
    <p>See the <a href="/docs/data-feeds/selecting-data-feeds/">Selecting Quality Data Feeds</a> page for complete details about each category.</p>
</div>

{% if metadata.l2healthflag == "arbitrum" or metadata.l2healthflag == "optimism" or metadata.l2healthflag == "metis" %}
<rdme-callout theme="warn">
   <p>This is an L2 network. As a best practice, use the L2 sequencer feed to verify the status of the sequencer when running applications on L2 networks. See the <a href="/docs/data-feeds/l2-sequencer-feeds/">L2 Sequencer Uptime Feeds</a> page for examples.
   </p>
</rdme-callout>
{% endif %}

<div id="categories">
<rdme-callout theme="info">
   <p>Please review the <a href="https://docs.chain.link/docs/data-feeds/selecting-data-feeds/#risk-mitigation">risk mitigation documentation</a> and <a href="https://chain.link/terms">chain.link/terms</a> for more detail on the risks of using data feeds and your responsibilities for risk mitigation.
   </p>
</rdme-callout>
</div>

{% if metadata.networkstatusurl %}
<div>
<p>Track the status of this network at <a href="{{metadata.networkstatusurl}}">{{metadata.networkstatusurl}}.</a></p>
</div>
{% endif %}

{% if metadata.ecosystem != "solana" %}
<div class = "cl-chainnav-product" id="networks-list">
    <div>
        <div>
            <div id="ethereum" onclick="javascript:setNet('ethereum')">
                <img src="/images/logos/ethereum.svg" title="Ethereum" loading="lazy" />
                <span>Ethereum</span>
            </div>
            <div id="bnb-chain" onclick="javascript:setNet('bnb-chain')">
                <img src="/images/logos/bnb-chain.svg" title="BNB Chain" loading="lazy" />
                <span>BNB Chain</span>
            </div>
            <div id="polygon" onclick="javascript:setNet('polygon')">
                <img src="/images/logos/polygon.svg" title="Polygon (Matic)" loading="lazy" />
                <span>Polygon</span>
            </div>
            <div id="gnosis-chain" onclick="javascript:setNet('gnosis-chain')">
                <img src="/images/logos/gnosis-chain.svg" title="Gnosis Chain (xDai)" loading="lazy" />
                <span>Gnosis Chain</span>
            </div>
            <div id="heco-chain" onclick="javascript:setNet('heco-chain')">
                <img src="/images/logos/heco.svg" title="HECO Chain" loading="lazy" />
                <span>HECO Chain</span>
            </div>
            <div id="avalanche" onclick="javascript:setNet('avalanche')">
                <img src="/images/logos/avalanche.svg" title="Avalanche" loading="lazy" />
                <span>Avalanche</span>
            </div>
            <div id="fantom" onclick="javascript:setNet('fantom')">
                <img src="/images/logos/fantom.svg" title="Fantom" loading="lazy" />
                <span>Fantom</span>
            </div>
            <div id="arbitrum" onclick="javascript:setNet('arbitrum')">
                <img src="/images/logos/arbitrum.svg" title="Arbitrum" loading="lazy" />
                <span>Arbitrum</span>
            </div>
            <div id="harmony" onclick="javascript:setNet('harmony')">
                <img src="/images/logos/harmony.svg" title="Harmony" loading="lazy" />
                <span>Harmony</span>
            </div>
            <div id="optimism" onclick="javascript:setNet('optimism')">
                <img src="/images/logos/optimism.svg" title="Optimism" loading="lazy" />
                <span>Optimism</span>
            </div>
            <div id="moonriver" onclick="javascript:setNet('moonriver')">
                <img src="/images/logos/moonriver.svg" title="Moonriver" loading="lazy" />
                <span>Moonriver</span>
            </div>
            <div id="moonbeam" onclick="javascript:setNet('moonbeam')">
                <img src="/images/logos/moonbeam.svg" title="Moonbeam" loading="lazy" />
                <span>Moonbeam</span>
            </div>
            <div id="metis" onclick="javascript:setNet('metis')">
                <img src="/images/logos/metis.png" title="Metis" loading="lazy" />
                <span>Metis</span>
            </div>
            <div id="klaytn" onclick="javascript:setNet('klaytn')">
                <img src="/images/logos/klaytn.svg" title="Klaytn"  loading="lazy" />
                <span>Klaytn</span>
            </div>
        </div>
    </div>
</div>
{% endif %}

<div id="feed-data">
    Loading feeds...
</div>

<script>
    dest = document.getElementById('feed-data');
    let showExtraDetails = false;
    let feedCategories = {
        "verified": '<span class="hovertext feed-category" data-hover="Verified"><a href="/docs/data-feeds/selecting-data-feeds/#ðŸŸ¢-verified-feeds" alt="Verified" target="_blank">ðŸŸ¢</a></span>',
        "monitored": '<span class="hovertext feed-category" data-hover="Monitored"><a href="/docs/data-feeds/selecting-data-feeds/#ðŸŸ¡-monitored-feeds" alt="Monitored" target="_blank">ðŸŸ¡</a></span>',
        "custom": '<span class="hovertext feed-category" data-hover="Custom"><a href="/docs/data-feeds/selecting-data-feeds/#-custom-feeds" alt="Custom" target="_blank">ðŸ”µ</a></span>',
        "specialized": '<span class="hovertext feed-category" data-hover="Specialized"><a href="/docs/data-feeds/selecting-data-feeds/#-specialized-feeds" alt="Specialized" target="_blank">âš«</a></span>',
        "deprecating": '<span class="hovertext feed-category" data-hover="Deprecating"><a href="#categories" alt="Deprecating" target="_blank">â­•</a></span>'
    }

    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    let selectedNetwork = urlParams.get('network') || '{{stub}}';
    {% if metadata.ecosystem != "solana" %}
        document.getElementById(selectedNetwork).classList.toggle("selectedNetwork");
    {% endif %}

    render = (data) => {
        let headers = [];
        let html = '';
        if(data[selectedNetwork]) {
            for(let network of data[selectedNetwork].networks) {
                if (network.dataType != "por" && network.dataType != "nftFloor") {
                    html += `<h2 id="${network.name}">${network.name} <a class="anchor" href="#${network.name}"><img src="/images/link.svg" alt="Link to this section"></a></h2>`;
                    headers.push(network.name);
                    if(selectedNetwork == "heco-chain"){
                        html += `
                            <p>
                                Due to the shutdown of <a href="https://twitter.com/HECO_Chain/status/1546797356481478656">Stars Bridge</a>, which served as the canonical bridge
                                between HECO and Ethereum, the lack of ongoing support and development of the HECO blockchain, and the continued degradation in on-chain activity and DeFi
                                TVL impacting oracle network sustainability, all Chainlink Data Feeds on HECO are planned to be deprecated on November 23, 2022.
                            </p>
                            <p>
                                Chainlink Labs is actively working with users on HECO to scope out next steps and to support their dApps across additional blockchains that they
                                are deployed on. Users with additional questions are encouraged to reach out <a href="https://chainlinkcommunity.typeform.com/s/dataFeedQs">here</a>.
                            </p>
                        `;
                    }
                    if(network.networkType == "mainnet" && data[selectedNetwork].networkStatusUrl){
                        html += `<p>Track the status of this network at <a href="${data[selectedNetwork].networkStatusUrl}">${data[selectedNetwork].networkStatusUrl}</a></p>`;
                    }
                    html += `<label><input type="checkbox" class="extra" ${showExtraDetails ? 'checked="checked"' : ''}>Show more details</input></label>`;
                    let proxyList = '';
                    if(network.networkType == "mainnet") {
                        for(let proxy of network.proxies) {
                            proxyList += `
                            <tr id="${network.name} ${proxy.pair}">
                                <td><div class="proxy-pair-column">${feedCategories[proxy.feedCategory] || ''}<code class="proxy-pair">${proxy.pair}</code></div>
                                ${ proxy.shutdownDate ? '<hr class="shutDate"><div class="shutDate">Deprecating:<br/>' + proxy.shutdownDate + '</div>' : '' }
                                </td>
                                <td><code>${proxy.assetName}</code></td>
                                <td><code>${proxy.feedType}</code></td>
                                <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.deviationThreshold ? (proxy.deviationThreshold + '%') : 'N/A'}</td>
                                <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.heartbeat ? proxy.heartbeat : 'N/A'}</td>
                                <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.decimals ? proxy.decimals : 'N/A'}</td>
                                <td><a href="${network.url.replace('%s',proxy.proxy)}" target="_blank"><code>${proxy.proxy}</code></a></td>
                            </tr>`;
                        }
                        html += `
                        <table>
                            <thead>
                                <tr>
                                    <th>Pair</th>
                                    <th>Asset</th>
                                    <th>Type</th>
                                    <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Deviation</th>
                                    <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Heartbeat</th>
                                    <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Dec</th>
                                    <th>Address</th>
                                </tr>
                            </thead>
                            <tbody>${proxyList}</tbody>
                        </table>`;
                    } else {
                        for(let proxy of network.proxies) {
                            proxyList += `
                            <tr id="${network.name} ${proxy.pair}">
                                <td class="proxy-column"><code>${proxy.pair}</code></td>
                                <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.deviationThreshold ? (proxy.deviationThreshold + '%') : 'N/A'}</td>
                                <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.heartbeat ? proxy.heartbeat : 'N/A'}</td>
                                <td ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.decimals ? proxy.decimals : 'N/A'}</td>
                                <td><a href="${network.url.replace('%s',proxy.proxy)}" target="_blank"><code>${proxy.proxy}</code></a></td>
                            </tr>`;
                        }
                        html += `
                        <table>
                            <thead>
                                <tr>
                                    <th>Pair</th>
                                    <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Deviation</th>
                                    <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Heartbeat</th>
                                    <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Dec</th>
                                    <th>Address</th>
                                </tr>
                            </thead>
                            <tbody>${proxyList}</tbody>
                        </table>`;
                    }
                }
            }
        } else {
            html = `<em style="color:red;">Couldn't render the feed list, it may still be processing. Feeds are updated about every half hour..</em>`;
        }

        // Table of Contents
        let toc = '';
        toc += `<h3>Networks</h3>
        <ul>`;
        for (let i = 0; i < headers.length; i++) {
            toc += `<li><a href="#${headers[i]}">${headers[i]}</a></li>`;
            
        }
        toc += `</ul>`;
        html = toc + html;

        // Render HTML
        dest.innerHTML = html;
        dest.querySelectorAll('.extra').forEach((item) => item.addEventListener('change', () => {
            showExtraDetails = event.target.checked;
            render(data);
            })
        );
    }
    // If you are developing locally, use a local version of this file,
    // Otherwise pull from the cron-generated web version
    let path = 'https://cl-docs-addresses.web.app/addresses.json';
    if(window.location.host === 'localhost:4200') {
        path = '/addresses/addresses.json';
    }else if(window.location.host.includes('chainlinklabs.vercel.app')){
        path = 'https://raw.githubusercontent.com/smartcontractkit/documentation/addresses-preview/_src/addresses/addresses-preview.json';
    }
    fetch(path)
    .then(response => response.json())
    .then(json => {
        render(json);
        goToNetwork();
    });

    async function goToNetwork() {
        if (window.location.hash.length) {
            anchorHash = window.location.hash.substring(1);
            try {
                document.getElementById(decodeURI(anchorHash)).scrollIntoView();
            }catch(e){
            }
        }
    }


    function setNet(networkName){
        document.getElementById(selectedNetwork).classList.toggle("selectedNetwork");
        selectedNetwork = networkName;
        fetch(path)
            .then(response => response.json())
            .then(json => {
                render(json);
        });
        document.getElementById(networkName).classList.toggle("selectedNetwork");
        let stateObj = { foo: "bar" }
        queryParam = "?network=" + selectedNetwork;
        history.pushState(stateObj, "page 2", queryParam);
    }

</script>

{% if whatsnext %}
    <div class="nextSteps">
    <hr/>
        <h2>What's Next</h2>
        <table>
            <tbody>
                {% for page in whatsnext %}
                <tr>
                    <td>
                        <a href="{{page[1]}}">â€º {{page[0]}}</a>
                    </td>
                </tr>
                {% endfor %}
        </table>
    </div>
{% endif %}

<rdme-callout theme="warn">
    <p><small>Please be careful with the feeds used by your smart contracts. The feeds listed in our official documentation have been reviewed; feeds built for custom deployments by other community members might have additional risks. Please do close diligence on your feeds before implementing them in your contracts. <a href="/docs/data-feeds/selecting-data-feeds/">Learn more about making responsible data quality decisions.</a></small>
    </p>
</rdme-callout>

<style>
    table {
        border-collapse: collapse;
        width:100%;
    }
    th, td {
        border: 1px solid #dfe2e5;
        padding: 6px;
    }
    thead tr {
        background-color: #f6f8fa;
    }
    tr:nth-child(2n) {
        background-color: rgb(251, 252, 253);
    }
    .detail-hidden {
        display: none;
    }
    input {
        margin-right:8px;
    }

    .hovertext {
    position: relative;
    }

    .hovertext:before {
      content: attr(data-hover);
      visibility: hidden;
      opacity: 0;
      background-color: white;
      color: #375bd2;
      text-align: center;
      padding: 4px;
      outline: 1px solid #375bd2;
      font-color: #375bd2;
      border-radius: 2px;
      position: absolute;
      z-index: 1;
      bottom: 120%;
    }

    .hovertext:hover:before {
      opacity: 1;
      visibility: visible;
    }

    .proxy-pair-column {
      display: inline-flex;
    }

    .feed-category {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 2px;
    }

    .proxy-pair {
      min-width: 107px;
    }

    hr.shutDate {
        margin: 2px;
        border: 0;
        height: 1px;
        background: #dfe2e5;
    }

    div.shutDate {
        font-size: 11px;
        text-align: center;
        line-height: 1.25em;
    }

    .cl-chainnav-product {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        /* position: sticky; */
        /* top: 0; */
        /* z-index: +1; */
    }

    .cl-chainnav-product > div {
        background-color: #ffffff;
        max-width: 700px;
        min-width: 345px;
        padding: 16px 16px 16px 16px;
        border-radius: 8px;
        border: 1px solid #dee7fc;
        text-align: center;
        flex: 1;
    }

    .cl-chainnav-product > div > div > div {
        color: rgb(61, 69, 86);
        font-size: 18px;
        display: inline-flex;
        width: 150px;
        height: 32px;
        margin: 6px;
    }

    .cl-chainnav-product > div > div > div:hover {
        cursor: pointer;
        font-weight: bold;
    }

    .cl-chainnav-product > div > div > div > span {
        margin-left: 6px;
        margin-top: 6px;
    }

    .cl-chainnav-product > div > div > div > img {
        max-width: 32px;
        max-height: 32px;
        min-width: 32px;
        transition: all 0.2s;
    }

    .cl-chainnav-product > div > div > div:hover > img {
        cursor: pointer;
        transform: scale(1.15);
    }

    .selectedNetwork {
        font-weight: bold;
        pointer-events: none;
    }

    .selectedNetwork > img {
        transform: scale(1.15);
    }

</style>