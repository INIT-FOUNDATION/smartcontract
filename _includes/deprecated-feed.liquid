---
layout: ./nodes.liquid
section: ethereum
---

{{content}}

<style>
    table {
        border-collapse: collapse;
        width:100%;
    }
    th, td {
        border: 1px solid #dfe2e5;
        padding: 6px;
    }
    thead tr {
        background-color: #f6f8fa;
    }
    tr:nth-child(2n) {
        background-color: rgb(251, 252, 253);
    }
    .detail-hidden {
        display: none;
    }
    input {
        margin-right:8px;
    }

    .hovertext {
    position: relative;
    }

    .hovertext:before {
      content: attr(data-hover);
      visibility: hidden;
      opacity: 0;
      background-color: white;
      color: #375bd2;
      text-align: center;
      padding: 4px;
      outline: 1px solid #375bd2;
      font-color: #375bd2;
      border-radius: 2px;
      position: absolute;
      z-index: 1;
      bottom: 120%;
    }

    .hovertext:hover:before {
      opacity: 1;
      visibility: visible;
    }

    .proxy-pair-column {
      display: inline-flex;
    }

    .feed-category {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 2px;
    }

    .proxy-pair {
      min-width: 107px;
    }

    hr.shutDate {
        margin: 2px;
        border: 0;
        height: 1px;
        background: #dfe2e5;
    }

    div.shutDate {
        font-size: 11px;
        text-align: center;
        line-height: 1.25em;
    }

</style>

<div id="feed-data">
    Loading feeds...
</div>

<script>
    dest = document.getElementById('feed-data');
    let feedCategories = {
        "verified": '<span class="hovertext feed-category" data-hover="Verified"><a href="/docs/data-feeds/selecting-data-feeds/#ðŸŸ¢-verified-feeds" alt="Verified" target="_blank">ðŸŸ¢</a></span>',
        "monitored": '<span class="hovertext feed-category" data-hover="Monitored"><a href="/docs/data-feeds/selecting-data-feeds/#ðŸŸ¡-monitored-feeds" alt="Monitored" target="_blank">ðŸŸ¡</a></span>',
        "custom": '<span class="hovertext feed-category" data-hover="Custom"><a href="/docs/data-feeds/selecting-data-feeds/#-custom-feeds" alt="Custom" target="_blank">ðŸ”µ</a></span>',
        "specialized": '<span class="hovertext feed-category" data-hover="Specialized"><a href="/docs/data-feeds/selecting-data-feeds/#-specialized-feeds" alt="Specialized" target="_blank">âš«</a></span>',
        "deprecating": '<span class="hovertext feed-category" data-hover="Deprecating"><a href="#categories" alt="Deprecating" target="_blank">â­•</a></span>'
    }
    render = (data) => {
        let html = '';
        for(key in data){
            if(data[key]) {
                for(let network of data[key].networks) {
                    let proxyList = '';
                    let shutdownFound = false;
                    for(let proxy of network.proxies) {
                        if(proxy.shutdownDate){
                            shutdownFound = true;
                            proxyList += `
                            <tr id="${network.name} ${proxy.pair}">
                                <td><div class="proxy-pair-column">${feedCategories[proxy.feedCategory] || ''}<code class="proxy-pair">${proxy.pair}</code></div>
                                ${ proxy.shutdownDate ? '<hr class="shutDate"></hr><div class="shutDate">Deprecating:<br/>' + proxy.shutdownDate + '</div>' : '' }
                                </td>
                                <td><code>${proxy.assetName}</code></td>
                                <td><code>${proxy.feedType}</code></td>
                                <td><a href="${network.url.replace('%s',proxy.proxy)}"><code>${proxy.proxy}</code></a></td>
                            </tr>`;
                        }
                    }
                    if(shutdownFound){
                        html += `
                        <h2 id="${network.name}">${network.name} feeds being deprecated<a class="anchor" href="#${network.name}"><img src="/images/link.svg" alt="Link to this section"></a></h2>
                        <p>
                        `;
                        if(network.name == "HECO Mainnet"){
                            html += `
                                <p>
                                    Due to the shutdown of <a href="https://twitter.com/HECO_Chain/status/1546797356481478656">Stars Bridge</a>, which served as the canonical bridge
                                    between HECO and Ethereum, the lack of ongoing support and development of the HECO blockchain, and the continued degradation in on-chain activity and DeFi
                                    TVL impacting oracle network sustainability, all Chainlink Data Feeds on HECO are planned to be deprecated on November 23, 2022.
                                </p>
                                <p>
                                    Chainlink Labs is actively working with users on HECO to scope out next steps and to support their dApps across additional blockchains that they
                                    are deployed on. Users with additional questions are encouraged to reach out <a href="https://chainlinkcommunity.typeform.com/s/dataFeedQs">here</a>.
                                </p>
                            `;
                        }
                        html += `
                            <table>
                                <thead>
                                    <tr>
                                        <th>Pair</th>
                                        <th>Asset</th>
                                        <th>Type</th>
                                        <th>Address</th>
                                    </tr>
                                </thead>
                                <tbody>${proxyList}</tbody>
                            </table>
                        `;
                    }
                }
            } else {
                html = `<em style="color:red;">Couldn't render the feed list, it may still be processing. Feeds are updated about every half hour..</em>`;
            }
        }

        dest.innerHTML = html;
    }

    // If you are developing locally, use a local version of this file,
    // Otherwise pull from the cron-generated web version
    let path = 'https://cl-docs-addresses.web.app/addresses.json';
    if(window.location.host === 'localhost:4200') {
        path = '/addresses/addresses.json';
    }else if(window.location.host.includes('chainlinklabs.vercel.app')){
        path = 'https://raw.githubusercontent.com/smartcontractkit/documentation/addresses-preview/_src/addresses/addresses-preview.json';
    }
    fetch(path)
    .then(response => response.json())
    .then(json => {
        render(json);
    });
</script>
